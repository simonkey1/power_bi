[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "",
    "text": "Hace poco descubr√≠ la p√°gina de la Superintendecia de Electricidad y Combustibles (SEC). Me llam√≥ la atenci√≥n en particular su secci√≥n de m√©tricas e informaci√≥n de los cortes de luz a nivel nacional, debido a que not√© que hay un gran margen de mejora en su accesibilidad y visualizaci√≥n de los datos para el usuario."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n\nCode\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "index.html#introducci√≥n",
    "href": "index.html#introducci√≥n",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "",
    "text": "Hace poco descubr√≠ la p√°gina de la Superintendecia de Electricidad y Combustibles (SEC). Me llam√≥ la atenci√≥n en particular su secci√≥n de m√©tricas e informaci√≥n de los cortes de luz a nivel nacional, debido a que not√© que hay un gran margen de mejora en su accesibilidad y visualizaci√≥n de los datos para el usuario."
  },
  {
    "objectID": "index.html#qu√©-haremos",
    "href": "index.html#qu√©-haremos",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "¬øQu√© haremos?",
    "text": "¬øQu√© haremos?\n\nPreparar nuestro entorno: primero, instalaremos las dependencias necesarias para el proyecto.\nExtracci√≥n de los datos: aprenderemos a realizar web scraping con Playwright.\nTransformaci√≥n de los datos: necesitaremos limpiar y procesar los datos extra√≠dos con Pandas.\nVisualizaci√≥n de los datos: finalmente, visualizaremos los datos en Powerbi."
  },
  {
    "objectID": "index.html#entorno-de-desarrollo",
    "href": "index.html#entorno-de-desarrollo",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "Entorno de Desarrollo",
    "text": "Entorno de Desarrollo\nPara este proyecto, necesitaremos instalar las siguientes dependencias: Playwright, Pandas y Powerbi.\nLes recomiendo crear un entorno virtual para instalar las dependencias. Para ello, decidan un directorio donde quieran crear el entorno virtual y ejecuten el siguiente comando en la terminal:\n\n    python -m venv \"nombre-del-entorno\"-env\n\nUna vez creado el entorno virtual, act√≠venlo con el siguiente comando:\n\n    source \"nombre-del-entorno\"-env/bin/activate\n\nAhora, instalemos las dependencias necesarias:\n\n    pip install playwright pandas"
  },
  {
    "objectID": "index.html#extracci√≥n-de-los-datos",
    "href": "index.html#extracci√≥n-de-los-datos",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "Extracci√≥n de los Datos",
    "text": "Extracci√≥n de los Datos\nPrimero, necesitamos importar las librer√≠as necesarias:\n\n    from playwright.sync_api import sync_playwright\n    import pandas as pd"
  },
  {
    "objectID": "index.html#extracci√≥n-de-datos-con-playwright",
    "href": "index.html#extracci√≥n-de-datos-con-playwright",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üîç Extracci√≥n de Datos con Playwright",
    "text": "üîç Extracci√≥n de Datos con Playwright\nUsaremos Playwright para interceptar las respuestas de la API de la SEC.\n\nüìå Importaci√≥n de Librer√≠as\nfrom playwright.sync_api import sync_playwright\nimport pandas as pd\nimport os\nimport time\nimport re\nfrom datetime import datetime, timedelta"
  },
  {
    "objectID": "index.html#definici√≥n-de-archivos-de-salida",
    "href": "index.html#definici√≥n-de-archivos-de-salida",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üìÇ Definici√≥n de Archivos de Salida",
    "text": "üìÇ Definici√≥n de Archivos de Salida\nGuardaremos los datos en dos archivos CSV:\n\nclientes_afectados_tiempo_real.csv: Contiene los datos m√°s recientes.\nclientes_afectados_historico.csv: Mantiene un registro hist√≥rico.\n\ncsv_tiempo_real = \"clientes_afectados_tiempo_real.csv\"\ncsv_historico = \"clientes_afectados_historico.csv\""
  },
  {
    "objectID": "index.html#estructura-general",
    "href": "index.html#estructura-general",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üìå Estructura General",
    "text": "üìå Estructura General\n\nAbrir un navegador en modo headless (sin interfaz gr√°fica).\nInterceptar las respuestas de la API en la p√°gina de la SEC.\nExtraer informaci√≥n clave de los datos JSON recibidos.\nProcesar los datos para calcular tiempos y crear identificadores √∫nicos.\nGuardar la informaci√≥n en archivos CSV.\nCerrar el navegador una vez completado el proceso."
  },
  {
    "objectID": "index.html#paso-a-paso-de-la-funci√≥n",
    "href": "index.html#paso-a-paso-de-la-funci√≥n",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üõ† Paso a Paso de la Funci√≥n",
    "text": "üõ† Paso a Paso de la Funci√≥n\n\n1Ô∏è‚É£ Inicializar Playwright y Abrir el Navegador\nSe utiliza sync_playwright() para iniciar Playwright y lanzar un navegador Chromium en modo headless (sin interfaz gr√°fica).\nwith sync_playwright() as p:\n    browser = p.chromium.launch(headless=True)  # Lanzar navegador en modo headless\n    page = browser.new_page()\nüìå ¬øQu√© hace esto?\n\nCrea una instancia de Playwright.\nLanza un navegador Chromium sin interfaz visual.\nCrea una nueva p√°gina en ese navegador.\n\n\n\n\n2Ô∏è‚É£ Definir una Lista para Almacenar Registros\nregistros = []  # Lista para almacenar datos nuevos\nüìå ¬øPara qu√© sirve?\n\nAqu√≠ se guardar√°n los datos extra√≠dos de la API antes de escribirlos en los archivos CSV.\n\n\n\n\n3Ô∏è‚É£ Interceptar las Respuestas de la API\ndef handle_response(response):\n    if \"GetPorFecha\" in response.url:\n        try:\n            data = response.json()\n            timestamp_actual = datetime.now()  # Tiempo de consulta\nüìå ¬øQu√© hace esto?\n\nVerifica si la URL de la respuesta contiene \"GetPorFecha\", lo que indica que es una respuesta de la API relevante.\nConvierte la respuesta en JSON (response.json()).\nGuarda el timestamp actual para identificar cu√°ndo se hizo la consulta.\n\n\n\n\n4Ô∏è‚É£ Procesar los Datos Extra√≠dos\nfor entry in data:\n    actualizado_hace = entry.get(\"ACTUALIZADO_HACE\", \"\")\n    minutos_atras = 0\n\n    match = re.search(r'(\\d+)\\s+Minutos', actualizado_hace)\n    if match:\n        minutos_atras = int(match.group(1))  # Extrae el n√∫mero antes de \"Minutos\"\n\n    hora_exacta_reporte = timestamp_actual - timedelta(minutes=minutos_atras)\nüìå ¬øQu√© hace esto?\n\nExtrae el campo \"ACTUALIZADO_HACE\", que indica hace cu√°nto tiempo se actualiz√≥ la informaci√≥n.\nUsa una expresi√≥n regular (re.search) para extraer los minutos mencionados en \"ACTUALIZADO_HACE\".\nCalcula la hora exacta del reporte, restando esos minutos del timestamp actual.\n\n\n\n\n5Ô∏è‚É£ Crear un Identificador √önico para Cada Registro\nunique_id = f\"{entry.get('FECHA_INT_STR', '')}-{entry.get('REGION', '')}-{entry.get('COMUNA', '')}-{entry.get('EMPRESA', '')}-{entry.get('CLIENTES_AFECTADOS', 0)}-{hora_exacta_reporte.strftime('%Y-%m-%d %H:%M:%S')}\"\nüìå ¬øPor qu√© es importante esto?\n\nEvita la duplicaci√≥n de datos, asegurando que cada registro tenga un ID √∫nico.\nFacilita la organizaci√≥n en los archivos CSV.\n\n\n\n\n6Ô∏è‚É£ Guardar los Datos en la Lista registros\nregistros.append({\n    \"ID_UNICO\": unique_id,\n    \"TIMESTAMP\": timestamp_actual.strftime(\"%Y-%m-%d %H:%M:%S\"),\n    \"HORA_EXACTA_REPORTE\": hora_exacta_reporte.strftime(\"%Y-%m-%d %H:%M:%S\"),\n    \"FECHA\": entry.get(\"FECHA_INT_STR\", \"\"),\n    \"REGION\": entry.get(\"NOMBRE_REGION\", \"\"),\n    \"COMUNA\": entry.get(\"NOMBRE_COMUNA\", \"\"),\n    \"EMPRESA\": entry.get(\"NOMBRE_EMPRESA\", \"\"),\n    \"CLIENTES_AFECTADOS\": entry.get(\"CLIENTES_AFECTADOS\", 0),\n    \"ACTUALIZADO_HACE\": actualizado_hace\n})\nüìå ¬øQu√© hace esto?\n\nGuarda cada registro como un diccionario dentro de la lista registros.\nAlmacena los datos clave como fecha, regi√≥n, comuna, empresa y clientes afectados.\n\n\n\n\n7Ô∏è‚É£ Capturar las Respuestas de la API\npage.on(\"response\", handle_response)\nüìå ¬øQu√© hace esto?\n\nAsocia la funci√≥n handle_response con cada respuesta de la p√°gina.\nIntercepta las respuestas en segundo plano mientras se carga la web.\n\n\n\n\n8Ô∏è‚É£ Acceder a la P√°gina de la SEC\npage.goto(\"https://apps.sec.cl/INTONLINEv1/index.aspx\")\npage.wait_for_timeout(5000)  # Espera para capturar datos\nüìå ¬øQu√© hace esto?\n\nAbre la p√°gina de la SEC en el navegador.\nEspera 5 segundos para permitir la carga de datos.\n\n\n\n\n9Ô∏è‚É£ Cerrar el Navegador\nbrowser.close()\nüìå ¬øPor qu√© es importante?\n\nLibera recursos del sistema.\nEvita que el script consuma demasiada memoria."
  },
  {
    "objectID": "index.html#guardado-de-datos-en-csv",
    "href": "index.html#guardado-de-datos-en-csv",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üìä Guardado de Datos en CSV",
    "text": "üìä Guardado de Datos en CSV\nif registros:\n    df_new = pd.DataFrame(registros)\n\n    # üìå Guardar en CSV hist√≥rico\n    if os.path.exists(csv_historico):\n        df_historico = pd.read_csv(csv_historico, encoding=\"utf-8-sig\")\n        df_historico = pd.concat([df_historico, df_new]).drop_duplicates(subset=[\"ID_UNICO\"], keep=\"first\")\n    else:\n        df_historico = df_new\n\n    df_historico.to_csv(csv_historico, index=False, encoding=\"utf-8-sig\")\n\n    # üìå Guardar en CSV de Tiempo Real\n    df_new.to_csv(csv_tiempo_real, index=False, encoding=\"utf-8-sig\")\n\n    print(f\"‚úÖ Datos guardados en:\\nüìå {csv_historico} (Hist√≥rico)\\nüìå {csv_tiempo_real} (Tiempo Real)\")\nüìå ¬øQu√© hace esto?\n\nConvierte los registros en un DataFrame de Pandas.\nGuarda los datos en CSV hist√≥rico y de tiempo real.\nEvita duplicados bas√°ndose en el ID √∫nico."
  },
  {
    "objectID": "index.html#automatizaci√≥n-cada-5-minutos",
    "href": "index.html#automatizaci√≥n-cada-5-minutos",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üîÅ Automatizaci√≥n Cada 5 Minutos",
    "text": "üîÅ Automatizaci√≥n Cada 5 Minutos\nwhile True:\n    intercept_responses()\n    print(\"‚è≥ Esperando 5 minutos para la siguiente ejecuci√≥n...\\n\")\n    time.sleep(5 * 60)  # 5 minutos en segundos\nüìå ¬øQu√© hace esto?\n\nEjecuta intercept_responses() en un bucle infinito.\nEspera 5 minutos (time.sleep(5 * 60)) antes de volver a ejecutar la funci√≥n.\n\n\nFelicidades‚≠ê!\nYa tenemos nuestra base de datos casi lista para su visualizaci√≥n. Si bien podr√≠amos terminar de darle formato a los datos directamente con pandas, es una perfecta ocasi√≥n para hacerlo en powerbi, ya que podremos visualizar con facilidad los cambios que iremos realizando para construir nuestro dashboard interactivo.\n\n\nAclaraci√≥n üî¥\nEste no es un tutorial de c√≥mo utilizar PowerBI, por lo que es necesario saber lo b√°sico para poder seguir el tutorial: instalaci√≥n, configuraci√≥n, comandos, etc."
  },
  {
    "objectID": "index.html#felicidades",
    "href": "index.html#felicidades",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "Felicidades‚≠ê!",
    "text": "Felicidades‚≠ê!\nYa tenemos nuestra base de datos casi lista para su visualizaci√≥n. Si bien podr√≠amos terminar de darle formato a los datos directamente con pandas, es una perfecta ocasi√≥n para hacerlo en powerbi, ya que podremos visualizar con facilidad los cambios que iremos realizando para construir nuestro dashboard interactivo."
  },
  {
    "objectID": "index.html#powerbi-utilizar-nuestro-archivo-.csv",
    "href": "index.html#powerbi-utilizar-nuestro-archivo-.csv",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "Powerbi: utilizar nuestro archivo .csv ",
    "text": "Powerbi: utilizar nuestro archivo .csv"
  },
  {
    "objectID": "index.html#aclaraci√≥n",
    "href": "index.html#aclaraci√≥n",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "Aclaraci√≥n üî¥",
    "text": "Aclaraci√≥n üî¥\nEste no es un tutorial de c√≥mo utilizar PowerBI, por lo que es necesario saber lo b√°sico para poder seguir el tutorial: instalaci√≥n, configuraci√≥n, comandos, etc.\n\nPowerbi: carga de datos \nDependiendo de la carpeta donde hayamos realizado nuestro proyecto, podremos encontrar el archivo resultante, el cual utilizaremos ahora.\nPara poder manipular nuestros datos en Powerbi hay que seguir unos pasos sencillos:\n\nAbrir PowerBI\nClick en Get data from other sources\nSeleccionamos Text/CSV\nBuscamos nuestro archivo .csv\n\nUna vez realizado estos pasos, nos aparecer√° una ventana emergente, donde presionaremos en Transform Data. A trav√©s de esta hoja de c√°lculo podremos completar los requerimientos para poder visualizar nuestro mapa de Chile por regiones. Estos son:\n\nOrdenar de mayor a menor los cortes de luz\nConstruir una nueva columna llamada Region_Corregida a partir de nuestra variable regi√≥n\nRenombrar cada regi√≥n de esta columna con los nombres del archivo topojson(mapa)\n\nPara ordenar de manera descendiente los clientes afectados, los pasos son similares a excel:\n\nClick en la columna clientes_afectados\nOrdenar de mayor a menor\nCerramos el men√∫"
  },
  {
    "objectID": "index.html#powerbi-carga-de-datos",
    "href": "index.html#powerbi-carga-de-datos",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "Powerbi: carga de datos",
    "text": "Powerbi: carga de datos\nDependiendo de la carpeta donde hayamos realizado nuestro proyecto, podremos encontrar el archivo resultante, el cual utilizaremos ahora.\nPara poder manipular nuestros datos en Powerbi hay que seguir unos pasos sencillos:\n\nAbrir PowerBI\nClick en Get data from other sources\nSeleccionamos Text/CSV\nBuscamos nuestro archivo .csv\n\nUna vez realizado estos pasos, nos aparecer√° una ventana emergente, donde presionaremos en Transform Data. A trav√©s de esta hoja de c√°lculo podremos completar los requerimientos para poder visualizar nuestro mapa de Chile por regiones. Estos son:\n\nOrdenar de mayor a menor los cortes de luz\nConstruir una nueva columna llamada Region_Corregida a partir de nuestra variable regi√≥n\nRenombrar cada regi√≥n de esta columna con los nombres del archivo topojson(mapa)\n\nPara ordenar de manera descendiente los clientes afectados, los pasos son similares a excel:\n\nClick en la columna clientes_afectados\nOrdenar de mayor a menor\nCerramos el men√∫\n\n\nNueva columna regi√≥n corregida\nEn el men√∫ principal buscamos la secci√≥n Add column, y clickeamos en Custom column, Luego ponemos el siguiente c√≥digo:\n= Table.AddColumn(#\"Sorted Rows\", \"Region_Corregida\", each \"Regi√≥n de \" & [REGION])\n\nüìå ¬øQu√© hace esto?\n\nTable.AddColumn ‚Üí Funci√≥n que agrega una nueva columna a una tabla existente.\n#‚ÄúSorted Rows‚Äù ‚Üí Nombre de nuestra base ya ordenada (paso anterior) en la que se est√° agregando la nueva columna.\n‚ÄúRegion_Corregida‚Äù ‚Üí Nombre de la nueva columna que se est√° creando.\neach ‚ÄúRegi√≥n de‚Äù & [REGION] ‚Üí Expresi√≥n que se eval√∫a para cada fila:\n‚ÄúRegi√≥n de‚Äù ‚Üí Texto fijo.\n[REGION] ‚Üí Columna existente en la tabla, cuyos valores se concatenan con el texto fijo.\n\n\n\nHola"
  },
  {
    "objectID": "index.html#nueva-columna-regi√≥n-corregida",
    "href": "index.html#nueva-columna-regi√≥n-corregida",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "Nueva columna regi√≥n corregida",
    "text": "Nueva columna regi√≥n corregida\nEn el men√∫ principal buscamos la secci√≥n Add column, y clickeamos en Custom column, Luego ponemos el siguiente c√≥digo:\n= Table.AddColumn(#\"Sorted Rows\", \"Region_Corregida\", each \"Regi√≥n de \" & [REGION])\nüìå ¬øQu√© hace esto?\n\nTable.AddColumn ‚Üí Funci√≥n que agrega una nueva columna a una tabla existente.\n#‚ÄúSorted Rows‚Äù ‚Üí Nombre de nuestra base ya ordenada (paso anterior) en la que se est√° agregando la nueva columna.\n‚ÄúRegion_Corregida‚Äù ‚Üí Nombre de la nueva columna que se est√° creando.\neach ‚ÄúRegi√≥n de‚Äù & [REGION] ‚Üí Expresi√≥n que se eval√∫a para cada fila:\n‚ÄúRegi√≥n de‚Äù ‚Üí Texto fijo.\n[REGION] ‚Üí Columna existente en la tabla, cuyos valores se concatenan con el texto fijo."
  },
  {
    "objectID": "index.html#hola",
    "href": "index.html#hola",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "Hola",
    "text": "Hola"
  },
  {
    "objectID": "index.html#cargar-el-archivo-csv-y-promover-encabezados",
    "href": "index.html#cargar-el-archivo-csv-y-promover-encabezados",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üìå Cargar el Archivo CSV y Promover Encabezados",
    "text": "üìå Cargar el Archivo CSV y Promover Encabezados\nSource = Csv.Document(\n    File.Contents(\"C:\\Users\\SIMON\\Desktop\\Kaggle\\luz\\power_bi\\clientes_afectados_tiempo_real.csv\"),\n    [Delimiter=\",\", Columns=9, Encoding=65001, QuoteStyle=QuoteStyle.None]\n),\n#\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true])\n¬øQu√© hace esto?\n\nCsv.Document & File.Contents: Carga el archivo CSV desde la ruta especificada.\nTable.PromoteHeaders: Convierte la primera fila en los nombres de columna, facilitando la manipulaci√≥n posterior."
  },
  {
    "objectID": "index.html#cambiar-tipos-de-datos",
    "href": "index.html#cambiar-tipos-de-datos",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üìå Cambiar Tipos de Datos",
    "text": "üìå Cambiar Tipos de Datos\n#\"Changed Type\" = Table.TransformColumnTypes(\n    #\"Promoted Headers\",\n    {\n        {\"ID_UNICO\", type text}, \n        {\"TIMESTAMP\", type datetime}, \n        {\"HORA_EXACTA_REPORTE\", type datetime}, \n        {\"FECHA\", type date}, \n        {\"REGION\", type text}, \n        {\"COMUNA\", type text}, \n        {\"EMPRESA\", type text}, \n        {\"CLIENTES_AFECTADOS\", Int64.Type}, \n        {\"ACTUALIZADO_HACE\", type text}\n    }\n)\n¬øQu√© hace esto?\n\nSe establecen los tipos de datos adecuados para cada columna, lo que es crucial para evitar errores y asegurar que los c√°lculos o transformaciones posteriores se realicen correctamente."
  },
  {
    "objectID": "index.html#agregar-una-columna-personalizada",
    "href": "index.html#agregar-una-columna-personalizada",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üìå Agregar una Columna Personalizada",
    "text": "üìå Agregar una Columna Personalizada\n#\"Added Custom\" = Table.AddColumn(\n    #\"Changed Type\",\n    \"REGION_CORREGIDA\",\n    each \"Regi√≥n de \" & [REGION]\n)\n¬øQu√© hace esto?\n\nTable.AddColumn: Agrega una nueva columna a la tabla.\n‚ÄúREGION_CORREGIDA‚Äù: Es el nombre de la nueva columna.\neach ‚ÄúRegi√≥n de‚Äù & [REGION]: Para cada fila, concatena el texto fijo \"Regi√≥n de \" con el valor existente en la columna REGION.\n\nEjemplo:\nSi el valor en REGION es \"Metropolitana\", el resultado en REGION_CORREGIDA ser√° \"Regi√≥n de Metropolitana\"."
  },
  {
    "objectID": "index.html#aplicar-reemplazos-de-forma-acumulativa",
    "href": "index.html#aplicar-reemplazos-de-forma-acumulativa",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üìå Aplicar Reemplazos de Forma Acumulativa",
    "text": "üìå Aplicar Reemplazos de Forma Acumulativa\n\nDefinici√≥n de la Lista de Reemplazos\nReemplazos = {\n    {\"Regi√≥n de Metropolitana\", \"Regi√≥n Metropolitana de Santiago\"},\n    {\"Regi√≥n de Tarapaca\", \"Regi√≥n de Tarapac√°\"},\n    {\"Regi√≥n de Magallanes\", \"Regi√≥n de Magallanes y Ant√°rtica Chilena\"},\n    {\"Regi√≥n de Ays√©n\", \"Regi√≥n de Ays√©n del Gral.Iba√±ez del Campo\"},\n    {\"Regi√≥n de O`Higgins\", \"Regi√≥n del Libertador Bernardo O'Higgins\"},\n    {\"Regi√≥n de Biobio\", \"Regi√≥n del B√≠o-B√≠o\"},\n    {\"Regi√≥n de La Araucania\", \"Regi√≥n de La Araucan√≠a\"},\n    {\"Regi√≥n de Los Rios\", \"Regi√≥n de los R√≠os\"},\n    {\"Regi√≥n de Valparaiso\", \"Regi√≥n de Valpara√≠so\"},\n    {\"Regi√≥n de Maule\", \"Regi√≥n del Maule\"}\n}\n¬øQu√© hace esto?\n\nSe define una lista de pares, donde cada par contiene:\n\nTexto original: Valor que aparece en la columna REGION_CORREGIDA.\nTexto corregido: Valor con el que se reemplazar√° el texto original.\n\n\n\n\nAplicaci√≥n de los Reemplazos con List.Accumulate\nResultado = List.Accumulate(\n    Reemplazos,\n    #\"Added Custom\",\n    (tabla, par) =&gt; Table.ReplaceValue(\n        tabla,\n        par{0},\n        par{1},\n        Replacer.ReplaceText,\n        {\"REGION_CORREGIDA\"}\n    )\n)\n¬øQu√© hace esto?\n\nList.Accumulate: Itera sobre cada par de la lista Reemplazos.\n#‚ÄúAdded Custom‚Äù: Es el paso inicial que contiene la tabla con la nueva columna REGION_CORREGIDA.\nTable.ReplaceValue: En cada iteraci√≥n, reemplaza el valor par{0} (texto original) por par{1} (texto corregido) en la columna REGION_CORREGIDA.\nEl proceso es acumulativo: cada reemplazo se aplica sobre el resultado del reemplazo anterior."
  },
  {
    "objectID": "index.html#tarjetas",
    "href": "index.html#tarjetas",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "Tarjetas,",
    "text": "Tarjetas,\nEn este post explicar√© paso a paso el c√≥digo M que utilizamos para transformar datos en Power Query. Este script carga un archivo CSV, promociona los encabezados, cambia los tipos de datos, agrega una columna personalizada concatenando un texto fijo con el valor existente en la columna REGION, y aplica una serie de reemplazos para corregir los nombres de las regiones de forma automatizada."
  },
  {
    "objectID": "index.html#construcci√≥n-de-m√©tricas-el-mapa-interactivo-y-gr√°ficos",
    "href": "index.html#construcci√≥n-de-m√©tricas-el-mapa-interactivo-y-gr√°ficos",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "Construcci√≥n de m√©tricas, el mapa interactivo y gr√°ficos",
    "text": "Construcci√≥n de m√©tricas, el mapa interactivo y gr√°ficos\n\nMedidas\nEn PowerBi utilizamos una herramienta llamada medida, con esta podemos realizar c√°lculos utilizando la sintaxis adecuada, lo que permite construir m√©tricas a partir de nuestros datos\n\n√öltima Actualizaci√≥n\n\n√öltima Actualizaci√≥n = MAX('clientes_afectados_historico'[TIMESTAMP])   \nCon esta medida podremos construir una card con la hora actual que corresponde la informaci√≥n\n\n\nTotal de Hogares sin Luz\n\n\nVariaci√≥n respecto a la medici√≥n anterior\nVariaci√≥n Afectados Hist√≥rica = \nVAR ultimoTiempo = MAX(clientes_afectados_historico[TIMESTAMP])\nVAR PenultimoTiempo = \n    CALCULATE(MAX(clientes_afectados_historico[TIMESTAMP]), \n              clientes_afectados_historico[TIMESTAMP] &lt; ultimoTiempo)\n\nVAR Afectados_Ultima =\n    CALCULATE(SUM(clientes_afectados_historico[CLIENTES_AFECTADOS]), \n              clientes_afectados_historico[TIMESTAMP] = ultimoTiempo)\n\nVAR Afectados_Anterior =\n    CALCULATE(SUM(clientes_afectados_historico[CLIENTES_AFECTADOS]), \n              clientes_afectados_historico[TIMESTAMP] = PenultimoTiempo)\n\nRETURN\n    Afectados_Ultima - Afectados_Anterior"
  },
  {
    "objectID": "index.html#powerquery",
    "href": "index.html#powerquery",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "PowerQuery",
    "text": "PowerQuery\nlet\n    // Cargar archivo CSV y promover encabezados\n    Source = Csv.Document(\n        File.Contents(\"C:\\Users\\SIMON\\Desktop\\Kaggle\\luz\\power_bi\\clientes_afectados_tiempo_real.csv\"),\n        [Delimiter=\",\", Columns=9, Encoding=65001, QuoteStyle=QuoteStyle.None]\n    ),\n    #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),\n    \n    // Cambiar tipos de datos\n    #\"Changed Type\" = Table.TransformColumnTypes(\n        #\"Promoted Headers\",\n        {\n            {\"ID_UNICO\", type text}, \n            {\"TIMESTAMP\", type datetime}, \n            {\"HORA_EXACTA_REPORTE\", type datetime}, \n            {\"FECHA\", type date}, \n            {\"REGION\", type text}, \n            {\"COMUNA\", type text}, \n            {\"EMPRESA\", type text}, \n            {\"CLIENTES_AFECTADOS\", Int64.Type}, \n            {\"ACTUALIZADO_HACE\", type text}\n        }\n    ),\n    \n    // Agregar columna REGION_CORREGIDA concatenando \"Regi√≥n de \" con el valor de REGION\n    #\"Added Custom\" = Table.AddColumn(\n        #\"Changed Type\",\n        \"REGION_CORREGIDA\",\n        each \"Regi√≥n de \" & [REGION]\n    ),\n    \n    // Lista de reemplazos para la columna REGION_CORREGIDA\n    Reemplazos = {\n        {\"Regi√≥n de Metropolitana\", \"Regi√≥n Metropolitana de Santiago\"},\n        {\"Regi√≥n de Tarapaca\", \"Regi√≥n de Tarapac√°\"},\n        {\"Regi√≥n de Magallanes\", \"Regi√≥n de Magallanes y Ant√°rtica Chilena\"},\n        {\"Regi√≥n de Ays√©n\", \"Regi√≥n de Ays√©n del Gral.Iba√±ez del Campo\"},\n        {\"Regi√≥n de O`Higgins\", \"Regi√≥n del Libertador Bernardo O'Higgins\"},\n        {\"Regi√≥n de Biobio\", \"Regi√≥n del B√≠o-B√≠o\"},\n        {\"Regi√≥n de La Araucania\", \"Regi√≥n de La Araucan√≠a\"},\n        {\"Regi√≥n de Los Rios\", \"Regi√≥n de los R√≠os\"},\n        {\"Regi√≥n de Valparaiso\", \"Regi√≥n de Valpara√≠so\"},\n        {\"Regi√≥n de Maule\", \"Regi√≥n del Maule\"}\n    },\n\n    // Aplicar reemplazos a REGION_CORREGIDA de forma acumulativa\n    Resultado = List.Accumulate(\n        Reemplazos,\n        #\"Added Custom\",\n        (tabla, par) =&gt; Table.ReplaceValue(\n            tabla,\n            par{0},\n            par{1},\n            Replacer.ReplaceText,\n            {\"REGION_CORREGIDA\"}\n        )\n    )\nin\n    Resultado"
  },
  {
    "objectID": "index.html#an√°lisis-del-c√≥digo-m",
    "href": "index.html#an√°lisis-del-c√≥digo-m",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "An√°lisis del c√≥digo M",
    "text": "An√°lisis del c√≥digo M\nGeneralmente tienes dos maneras de realizar las transformaciones con Power Query: con interfaz gr√°fica y con c√≥digo. Para simplificar el proceso, utilizaremos el siguiente c√≥digo que nos permitir√° dejar lista la base para pasar a los diagramas. Repasaremos cada l√≠nea de c√≥digo. Si quieres pasar directamente a la visualizaci√≥n, puedes omitir esta parte."
  },
  {
    "objectID": "index.html#explicaci√≥n-del-c√≥digo-m",
    "href": "index.html#explicaci√≥n-del-c√≥digo-m",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "Explicaci√≥n del c√≥digo M",
    "text": "Explicaci√≥n del c√≥digo M\nA continuaci√≥n, desglosamos cada parte del c√≥digo para comprender su funcionamiento."
  }
]