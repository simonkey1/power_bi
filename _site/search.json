[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "",
    "text": "Hace poco descubr√≠ la p√°gina de la Superintendecia de Electricidad y Combustibles (SEC). Me llam√≥ la atenci√≥n en particular su secci√≥n de m√©tricas e informaci√≥n de los cortes de luz a nivel nacional, debido a que not√© que hay un gran margen de mejora en su accesibilidad y visualizaci√≥n de los datos para el usuario."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n\nCode\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "index.html#introducci√≥n",
    "href": "index.html#introducci√≥n",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "",
    "text": "Hace poco descubr√≠ la p√°gina de la Superintendecia de Electricidad y Combustibles (SEC). Me llam√≥ la atenci√≥n en particular su secci√≥n de m√©tricas e informaci√≥n de los cortes de luz a nivel nacional, debido a que not√© que hay un gran margen de mejora en su accesibilidad y visualizaci√≥n de los datos para el usuario."
  },
  {
    "objectID": "index.html#qu√©-haremos",
    "href": "index.html#qu√©-haremos",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "¬øQu√© haremos?",
    "text": "¬øQu√© haremos?\n\nPreparar nuestro entorno: primero, instalaremos las dependencias necesarias para el proyecto.\nExtracci√≥n de los datos: aprenderemos a realizar web scraping con Playwright.\nTransformaci√≥n de los datos: necesitaremos limpiar y procesar los datos extra√≠dos con Pandas.\nVisualizaci√≥n de los datos: finalmente, visualizaremos los datos en Powerbi."
  },
  {
    "objectID": "index.html#entorno-de-desarrollo",
    "href": "index.html#entorno-de-desarrollo",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "Entorno de Desarrollo",
    "text": "Entorno de Desarrollo\nPara este proyecto, necesitaremos instalar las siguientes dependencias: Playwright, Pandas y Powerbi.\nLes recomiendo crear un entorno virtual para instalar las dependencias. Para ello, decidan un directorio donde quieran crear el entorno virtual y ejecuten el siguiente comando en la terminal:\n\n python -m venv \"nombre-del-entorno\"-env\nUna vez creado el entorno virtual, act√≠venlo con el siguiente comando:\n\nsource \"nombre-del-entorno\"-env/bin/activate\nAhora, instalemos las dependencias necesarias:\n\n    pip install playwright pandas"
  },
  {
    "objectID": "index.html#extracci√≥n-de-los-datos",
    "href": "index.html#extracci√≥n-de-los-datos",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "Extracci√≥n de los Datos",
    "text": "Extracci√≥n de los Datos\nPrimero, necesitamos importar las librer√≠as necesarias:\n\n    from playwright.sync_api import sync_playwright\n    import pandas as pd\nUna vez creado el entorno virtual, act√≠valo:\nbash\nsource ‚Äúnombre-del-entorno‚Äù-env/bin/activate"
  },
  {
    "objectID": "index.html#extracci√≥n-de-datos-con-playwright",
    "href": "index.html#extracci√≥n-de-datos-con-playwright",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üîç Extracci√≥n de Datos con Playwright",
    "text": "üîç Extracci√≥n de Datos con Playwright\nUsaremos Playwright para interceptar las respuestas de la API de la SEC.\n\nüìå Importaci√≥n de Librer√≠as\nfrom playwright.sync_api import sync_playwright\nimport pandas as pd\nimport os\nimport time\nimport re\nfrom datetime import datetime, timedelta"
  },
  {
    "objectID": "index.html#definici√≥n-de-archivos-de-salida",
    "href": "index.html#definici√≥n-de-archivos-de-salida",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üìÇ Definici√≥n de Archivos de Salida",
    "text": "üìÇ Definici√≥n de Archivos de Salida\nGuardaremos los datos en dos archivos CSV:\n\nclientes_afectados_tiempo_real.csv: Contiene los datos m√°s recientes.\nclientes_afectados_historico.csv: Mantiene un registro hist√≥rico.\n\ncsv_tiempo_real = \"clientes_afectados_tiempo_real.csv\"\ncsv_historico = \"clientes_afectados_historico.csv\""
  },
  {
    "objectID": "index.html#estructura-general",
    "href": "index.html#estructura-general",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üìå Estructura General",
    "text": "üìå Estructura General\n\nAbrir un navegador en modo headless (sin interfaz gr√°fica).\nInterceptar las respuestas de la API en la p√°gina de la SEC.\nExtraer informaci√≥n clave de los datos JSON recibidos.\nProcesar los datos para calcular tiempos y crear identificadores √∫nicos.\nGuardar la informaci√≥n en archivos CSV.\nCerrar el navegador una vez completado el proceso."
  },
  {
    "objectID": "index.html#paso-a-paso-de-la-funci√≥n",
    "href": "index.html#paso-a-paso-de-la-funci√≥n",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üõ† Paso a Paso de la Funci√≥n",
    "text": "üõ† Paso a Paso de la Funci√≥n\n\n1Ô∏è‚É£ Inicializar Playwright y Abrir el Navegador\nSe utiliza sync_playwright() para iniciar Playwright y lanzar un navegador Chromium en modo headless (sin interfaz gr√°fica).\nwith sync_playwright() as p:\n    browser = p.chromium.launch(headless=True)  # Lanzar navegador en modo headless\n    page = browser.new_page()\nüìå ¬øQu√© hace esto?\n\nCrea una instancia de Playwright.\nLanza un navegador Chromium sin interfaz visual.\nCrea una nueva p√°gina en ese navegador.\n\n\n\n\n2Ô∏è‚É£ Definir una Lista para Almacenar Registros\nregistros = []  # Lista para almacenar datos nuevos\nüìå ¬øPara qu√© sirve?\n\nAqu√≠ se guardar√°n los datos extra√≠dos de la API antes de escribirlos en los archivos CSV.\n\n\n\n\n3Ô∏è‚É£ Interceptar las Respuestas de la API\ndef handle_response(response):\n    if \"GetPorFecha\" in response.url:\n        try:\n            data = response.json()\n            timestamp_actual = datetime.now()  # Tiempo de consulta\nüìå ¬øQu√© hace esto?\n\nVerifica si la URL de la respuesta contiene \"GetPorFecha\", lo que indica que es una respuesta de la API relevante.\nConvierte la respuesta en JSON (response.json()).\nGuarda el timestamp actual para identificar cu√°ndo se hizo la consulta.\n\n\n\n\n4Ô∏è‚É£ Procesar los Datos Extra√≠dos\nfor entry in data:\n    actualizado_hace = entry.get(\"ACTUALIZADO_HACE\", \"\")\n    minutos_atras = 0\n\n    match = re.search(r'(\\d+)\\s+Minutos', actualizado_hace)\n    if match:\n        minutos_atras = int(match.group(1))  # Extrae el n√∫mero antes de \"Minutos\"\n\n    hora_exacta_reporte = timestamp_actual - timedelta(minutes=minutos_atras)\nüìå ¬øQu√© hace esto?\n\nExtrae el campo \"ACTUALIZADO_HACE\", que indica hace cu√°nto tiempo se actualiz√≥ la informaci√≥n.\nUsa una expresi√≥n regular (re.search) para extraer los minutos mencionados en \"ACTUALIZADO_HACE\".\nCalcula la hora exacta del reporte, restando esos minutos del timestamp actual.\n\n\n\n\n5Ô∏è‚É£ Crear un Identificador √önico para Cada Registro\nunique_id = f\"{entry.get('FECHA_INT_STR', '')}-{entry.get('REGION', '')}-{entry.get('COMUNA', '')}-{entry.get('EMPRESA', '')}-{entry.get('CLIENTES_AFECTADOS', 0)}-{hora_exacta_reporte.strftime('%Y-%m-%d %H:%M:%S')}\"\nüìå ¬øPor qu√© es importante esto?\n\nEvita la duplicaci√≥n de datos, asegurando que cada registro tenga un ID √∫nico.\nFacilita la organizaci√≥n en los archivos CSV.\n\n\n\n\n6Ô∏è‚É£ Guardar los Datos en la Lista registros\nregistros.append({\n    \"ID_UNICO\": unique_id,\n    \"TIMESTAMP\": timestamp_actual.strftime(\"%Y-%m-%d %H:%M:%S\"),\n    \"HORA_EXACTA_REPORTE\": hora_exacta_reporte.strftime(\"%Y-%m-%d %H:%M:%S\"),\n    \"FECHA\": entry.get(\"FECHA_INT_STR\", \"\"),\n    \"REGION\": entry.get(\"NOMBRE_REGION\", \"\"),\n    \"COMUNA\": entry.get(\"NOMBRE_COMUNA\", \"\"),\n    \"EMPRESA\": entry.get(\"NOMBRE_EMPRESA\", \"\"),\n    \"CLIENTES_AFECTADOS\": entry.get(\"CLIENTES_AFECTADOS\", 0),\n    \"ACTUALIZADO_HACE\": actualizado_hace\n})\nüìå ¬øQu√© hace esto?\n\nGuarda cada registro como un diccionario dentro de la lista registros.\nAlmacena los datos clave como fecha, regi√≥n, comuna, empresa y clientes afectados.\n\n\n\n\n7Ô∏è‚É£ Capturar las Respuestas de la API\npage.on(\"response\", handle_response)\nüìå ¬øQu√© hace esto?\n\nAsocia la funci√≥n handle_response con cada respuesta de la p√°gina.\nIntercepta las respuestas en segundo plano mientras se carga la web.\n\n\n\n\n8Ô∏è‚É£ Acceder a la P√°gina de la SEC\npage.goto(\"https://apps.sec.cl/INTONLINEv1/index.aspx\")\npage.wait_for_timeout(5000)  # Espera para capturar datos\nüìå ¬øQu√© hace esto?\n\nAbre la p√°gina de la SEC en el navegador.\nEspera 5 segundos para permitir la carga de datos.\n\n\n\n\n9Ô∏è‚É£ Cerrar el Navegador\nbrowser.close()\nüìå ¬øPor qu√© es importante?\n\nLibera recursos del sistema.\nEvita que el script consuma demasiada memoria."
  },
  {
    "objectID": "index.html#guardado-de-datos-en-csv",
    "href": "index.html#guardado-de-datos-en-csv",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üìä Guardado de Datos en CSV",
    "text": "üìä Guardado de Datos en CSV\nif registros:\n    df_new = pd.DataFrame(registros)\n\n    # üìå Guardar en CSV hist√≥rico\n    if os.path.exists(csv_historico):\n        df_historico = pd.read_csv(csv_historico, encoding=\"utf-8-sig\")\n        df_historico = pd.concat([df_historico, df_new]).drop_duplicates(subset=[\"ID_UNICO\"], keep=\"first\")\n    else:\n        df_historico = df_new\n\n    df_historico.to_csv(csv_historico, index=False, encoding=\"utf-8-sig\")\n\n    # üìå Guardar en CSV de Tiempo Real\n    df_new.to_csv(csv_tiempo_real, index=False, encoding=\"utf-8-sig\")\n\n    print(f\"‚úÖ Datos guardados en:\\nüìå {csv_historico} (Hist√≥rico)\\nüìå {csv_tiempo_real} (Tiempo Real)\")\nüìå ¬øQu√© hace esto?\n\nConvierte los registros en un DataFrame de Pandas.\nGuarda los datos en CSV hist√≥rico y de tiempo real.\nEvita duplicados bas√°ndose en el ID √∫nico."
  },
  {
    "objectID": "index.html#automatizaci√≥n-cada-5-minutos",
    "href": "index.html#automatizaci√≥n-cada-5-minutos",
    "title": "‚ö° An√°lisis en Tiempo Real del Suministro El√©ctrico de Chile ‚ö°",
    "section": "üîÅ Automatizaci√≥n Cada 5 Minutos",
    "text": "üîÅ Automatizaci√≥n Cada 5 Minutos\nwhile True:\n    intercept_responses()\n    print(\"‚è≥ Esperando 5 minutos para la siguiente ejecuci√≥n...\\n\")\n    time.sleep(5 * 60)  # 5 minutos en segundos\nüìå ¬øQu√© hace esto?\n\nEjecuta intercept_responses() en un bucle infinito.\nEspera 5 minutos (time.sleep(5 * 60)) antes de volver a ejecutar la funci√≥n."
  }
]